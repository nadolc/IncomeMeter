name: IncomeMeter CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'development'
        type: choice
        options:
          - development
          - staging
          - production

env:
  DOTNET_VERSION: '9.0.x'
  NODE_VERSION: '18.x'
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/incomemeter-api

jobs:
  # ==================================================
  # BUILD & TEST JOBS
  # ==================================================
  
  test-backend:
    name: Test .NET API
    runs-on: ubuntu-latest
    
    steps:
    - name: 🛠️ Checkout code
      uses: actions/checkout@v4
      
    - name: 🔧 Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    - name: 📦 Restore dependencies
      run: dotnet restore IncomeMeter.sln
      
    - name: 🔨 Build solution
      run: dotnet build IncomeMeter.sln --no-restore --configuration Release
      
    - name: 🧪 Run API tests
      run: |
        if [ -d "IncomeMeter.Api.Tests" ]; then
          dotnet test IncomeMeter.Api.Tests --no-build --configuration Release --logger trx --results-directory ./test-results
        else
          echo "No API tests found, skipping..."
        fi
      
    - name: 📊 Publish test results
      uses: dorny/test-reporter@v1
      if: success() || failure()
      with:
        name: .NET API Tests
        path: './test-results/*.trx'
        reporter: dotnet-trx
        fail-on-error: false

  test-frontend:
    name: Test React Frontend
    runs-on: ubuntu-latest
    
    steps:
    - name: 🛠️ Checkout code
      uses: actions/checkout@v4
      
    - name: 🔧 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: IncomeMeter.Api/frontend/package-lock.json
        
    - name: 📦 Install dependencies
      working-directory: IncomeMeter.Api/frontend
      run: npm ci
      
    - name: 🔍 Run ESLint
      working-directory: IncomeMeter.Api/frontend
      run: npm run lint
      
    - name: 🧪 Run unit tests
      working-directory: IncomeMeter.Api/frontend
      run: npm run test -- --coverage --watchAll=false
      
    - name: 📊 Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./IncomeMeter.Api/frontend/coverage/clover.xml
        flags: frontend
        name: frontend-coverage

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: 🛠️ Checkout code
      uses: actions/checkout@v4
      
    - name: 🔒 Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
        
    - name: 📤 Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v2
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'

  build-and-push:
    name: Build & Push Container
    runs-on: ubuntu-latest
    needs: [test-backend, test-frontend, security-scan]
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    
    outputs:
      image-tag: ${{ steps.meta.outputs.tags }}
      image-digest: ${{ steps.build.outputs.digest }}
    
    steps:
    - name: 🛠️ Checkout code
      uses: actions/checkout@v4
      
    - name: 🔧 Setup Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: 🔐 Login to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        
    - name: 📝 Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}
          
    - name: 🔨 Build and push image
      id: build
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        platforms: linux/amd64,linux/arm64

  # ==================================================
  # DEPLOYMENT JOBS
  # ==================================================

  deploy-development:
    name: Deploy to Development
    runs-on: ubuntu-latest
    needs: [build-and-push]
    if: github.ref == 'refs/heads/develop' || (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'development')
    environment:
      name: development
      url: https://incomemeter-dev.azurewebsites.net
    
    steps:
    - name: 🛠️ Checkout code
      uses: actions/checkout@v4
      
    - name: 🔐 Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS_DEV }}
        
    - name: 🚀 Deploy to Azure Container Apps
      uses: azure/container-apps-deploy-action@v1
      with:
        resource-group: ${{ secrets.AZURE_RG_DEV }}
        container-app-name: incomemeter-api-dev
        container-image: ${{ needs.build-and-push.outputs.image-tag }}
        environment-variables: |
          ASPNETCORE_ENVIRONMENT=Development
          FRONTEND_BASE_URL=https://incomemeter-dev.azurewebsites.net
          API_BASE_URL=https://incomemeter-api-dev.azurewebsites.net

  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    needs: [build-and-push]
    if: github.ref == 'refs/heads/main' || (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'staging')
    environment:
      name: staging
      url: https://incomemeter-staging.azurewebsites.net
    
    steps:
    - name: 🛠️ Checkout code
      uses: actions/checkout@v4
      
    - name: 🔐 Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS_STAGING }}
        
    - name: 🚀 Deploy to Azure Container Apps
      uses: azure/container-apps-deploy-action@v1
      with:
        resource-group: ${{ secrets.AZURE_RG_STAGING }}
        container-app-name: incomemeter-api-staging
        container-image: ${{ needs.build-and-push.outputs.image-tag }}
        environment-variables: |
          ASPNETCORE_ENVIRONMENT=Staging
          FRONTEND_BASE_URL=https://incomemeter-staging.azurewebsites.net
          API_BASE_URL=https://incomemeter-api-staging.azurewebsites.net

  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: [build-and-push, deploy-staging]
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'production'
    environment:
      name: production
      url: https://incomemeter.com
    
    steps:
    - name: 🛠️ Checkout code
      uses: actions/checkout@v4
      
    - name: 🔐 Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS_PROD }}
        
    - name: 🚀 Deploy to Azure Container Apps
      uses: azure/container-apps-deploy-action@v1
      with:
        resource-group: ${{ secrets.AZURE_RG_PROD }}
        container-app-name: incomemeter-api-prod
        container-image: ${{ needs.build-and-push.outputs.image-tag }}
        environment-variables: |
          ASPNETCORE_ENVIRONMENT=Production
          FRONTEND_BASE_URL=https://incomemeter.com
          API_BASE_URL=https://api.incomemeter.com

  # ==================================================
  # POST-DEPLOYMENT TESTING
  # ==================================================

  smoke-tests:
    name: Smoke Tests
    runs-on: ubuntu-latest
    needs: [deploy-development]
    if: always() && needs.deploy-development.result == 'success'
    
    steps:
    - name: 🛠️ Checkout code
      uses: actions/checkout@v4
      
    - name: 🧪 Run smoke tests
      run: |
        # Health check
        curl -f https://incomemeter-api-dev.azurewebsites.net/health || exit 1
        
        # API endpoints check
        curl -f https://incomemeter-api-dev.azurewebsites.net/api/diagnostics/health || exit 1
        
        echo "✅ Smoke tests passed"

  notify-deployment:
    name: Notify Deployment Status
    runs-on: ubuntu-latest
    needs: [deploy-development, deploy-staging, deploy-production, smoke-tests]
    if: always()
    
    steps:
    - name: 📧 Send notification
      uses: 8398a7/action-slack@v3
      if: always()
      with:
        status: ${{ job.status }}
        text: |
          🚀 IncomeMeter Deployment Status:
          • Development: ${{ needs.deploy-development.result }}
          • Staging: ${{ needs.deploy-staging.result }}  
          • Production: ${{ needs.deploy-production.result }}
          • Smoke Tests: ${{ needs.smoke-tests.result }}
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}