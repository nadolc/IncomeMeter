# Docker Compose Development Override
# Use with: docker-compose -f docker-compose.yml -f docker-compose.dev.yml up

version: '3.8'

services:
  # Override API service for development
  api:
    environment:
      # Development configuration  
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: https://+:7079;http://+:8080
      
      # Frontend expects backend on port 7079
      FrontendBaseUrl: http://localhost:5173
      ApiBaseUrl: https://localhost:7079
      AllowedCorsOrigins: '["https://localhost:7079","http://localhost:5173","http://localhost:3000","http://localhost:8080"]'
      
      # Use real MongoDB connection for development
      MongoConnectionString: mongodb+srv://eggroll:RKE1VW3xzGuxA6icgY3V@incomemterdev.global.mongocluster.cosmos.azure.com/?tls=true&authMechanism=SCRAM-SHA-256&retrywrites=false&maxIdleTimeMS=120000
      MongoDatabaseName: incomemterdev
      
      # Development logging
      Serilog__MinimumLevel__Default: Information
      
      # Enable detailed errors for debugging
      DetailedErrors: "true"
    ports:
      - "7079:7079"  # HTTPS port for .NET backend (matches frontend proxy)
      - "8080:8080"  # HTTP port for backup access
    volumes:
      # Mount for live debugging (optional)
      - ./IncomeMeter.Api/logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "-k", "https://localhost:7079/api/diagnostics/health", "||", "curl", "-f", "http://localhost:8080/api/diagnostics/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  # MongoDB - same as base config but exposed for debugging
  mongodb:
    ports:
      - "27017:27017"  # Expose MongoDB for direct access if needed